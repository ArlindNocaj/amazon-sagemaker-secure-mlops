# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Create the Data Science environment

Parameters:
  ProjectName:
    Description: Project name
    Type: String
    Default: Automation

Resources:

  AutomationLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: InlinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: IAMPermission
                Effect: Allow
                Action:
                  - 'iam:GetRole'
                Resource: '*'
              - Sid: ServiceCatalogPermission
                Effect: Allow
                Action:
                  - servicecatalog:*
                Resource: '*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonVPCFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSageMakerFullAccess'

  CleanUpEFSLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-automation-CleanUpEFS'
      Code:
        ZipFile: |
          import json
          import boto3

          efs = boto3.client("efs")

          def lambda_handler(event, context):

              if not event:
                  return
                  
              sm_domain_id = event.get("SageMakerDomainId")

              print(f"Get EFS file system id(s) for SageMaker domain id {sm_domain_id}")
              fs_id = [
                  fs["FileSystemId"] for fs in efs.describe_file_systems()["FileSystems"] 
                      if [t["Value"] for t in fs["Tags"] if t["Key"]=="ManagedByAmazonSageMakerResource"][0].split("/")[-1] == sm_domain_id
                  ]

              print(f"EFS file system id(s): {fs_id}")

              for id in fs_id:
                  print(f"Delete mount targets for EFS file system id: {id}")
                  for mt in efs.describe_mount_targets(FileSystemId=id)["MountTargets"]:
                      efs.delete_mount_target(MountTargetId=mt["MountTargetId"])
                  
                  while len(efs.describe_mount_targets(FileSystemId=id)["MountTargets"]) > 0:
                      print("Wait until mount targes have been deleted")

                  print(f"Delete EFS file system {id}")
                  efs.delete_file_system(FileSystemId=id)
      Description: Delete SageMaker Studio left-over EFS file systems
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt AutomationLambdaExecutionRole.Arn 
      Runtime: python3.8
      Timeout: 300