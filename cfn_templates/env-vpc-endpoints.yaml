AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Create the all VPC endpoints for the Data Science environment VPC

Outputs:
  VPCEndpointS3Id:
    Description: Id of the S3 VPC endpoint
    Value: !Ref VPCEndpointS3

  PyPIMirrorEndpointDNS:
    Description: DNS entries for the PyPI mirror VPC endpoint 
    Value: !If 
      - PyPIMirrorEndpointCondition
      - !Select [ 0, !GetAtt VPCEndpointSharedServicesPyPIMirror.DnsEntries ]
      - ''

  DataBucketName:
    Description: Name of the Amazon S3 bucket for data
    Value: !Ref DataBucketName

  ModelBucketName:
    Description: Name of the Amazon S3 bucket for models
    Value: !Ref ModelBucketName
  
Parameters:
  VPCId:
    Description: Id of the Data Science VPC
    Type: 'AWS::EC2::VPC::Id'

  PrivateSubnetIds:
    Description: List of the subnet ids where Data Science environment deployed to
    Type: List<AWS::EC2::Subnet::Id>

  PrivateRouteTableIds:
    Description: Comma-delimited list of private route tables ids
    Type: CommaDelimitedList

  VPCEndpointsSecurityGroupId:
    Description: Id of the security group with all VPC endpoints to access AWS public services
    Type: 'AWS::EC2::SecurityGroup::Id'

  SharedServicesVPCEndpointSecurityGroupId:
    Description: ID of the security group with the VPC endpoint to access the shared services VPC
    Type: 'AWS::EC2::SecurityGroup::Id'

  PyPIMirrorEndpointServiceName:
    Description: PyPI mirror service name for VPC endpoint
    Type: String
    Default: ''

  DataBucketName:
    Description: S3 bucket name to store data
    Type: String

  ModelBucketName:
    Description: S3 bucket name to store models
    Type: String

  EnvName:
    Type: String
    AllowedPattern: '[a-z0-9\-]*'
    Description: Please specify your data science environment/team name.  Used as a suffix for environment resource names.

  EnvType:
    Description: System Environment (e.g. dev, test, prod). Used as a suffix for environment resource names.
    Type: String
    Default: dev

Conditions:
  PyPIMirrorEndpointCondition: !Not [ !Equals [!Ref 'PyPIMirrorEndpointServiceName', ''] ]

Resources:

  # Create the VPC endpoints (interface type) for AWS public service access:
  # SSM, CloudWatch, CloudWatch Logs, SageMaker Runtime, SageMaker API, SageMaker Notebook
  # STS, CodeCommit, CodeCommit API, ECR API, ECR
  # Shared Services PyPi mirror VPC endpoint
  VPCEndpointSSM:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcId: !Ref VPCId

  VPCEndpointCW:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.monitoring'
      VpcId: !Ref VPCId

  VPCEndpointCWL:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      VpcId: !Ref VPCId

  VPCEndpointSagemakerAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sagemaker.api'
      VpcId: !Ref VPCId

  VPCEndpointSageMakerRuntime:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sagemaker.runtime'
      VpcId: !Ref VPCId

  VPCEndpointSageMakerNotebook:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'aws.sagemaker.${AWS::Region}.notebook'
      VpcId: !Ref VPCId
      
  VPCEndpointSTS:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sts'
      VpcId: !Ref VPCId

  VPCEndpointCodeCommit:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.git-codecommit'
      VpcId: !Ref VPCId

  VPCEndpointCodeCommitAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.codecommit'
      VpcId: !Ref VPCId

  VPCEndpointECRAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      VpcId: !Ref VPCId

  VPCEndpointECR:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcId: !Ref VPCId

  VPCEndpointSharedServicesPyPIMirror:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: PyPIMirrorEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: false
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref SharedServicesVPCEndpointSecurityGroupId
      ServiceName: !Ref PyPIMirrorEndpointServiceName
      VpcId: !Ref VPCId

  # Create S3 endpoint (gateway type) for S3 access
  VPCEndpointS3:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      VpcId: !Ref VPCId
      PolicyDocument: 
        !Sub |
        { 
          "Version":"2012-10-17", 
          "Statement":[
          { 
            "Effect":"Allow", 
            "Principal": "*", 
            "Action":[
              "s3:GetObject",
              "s3:PutObject",
              "s3:ListBucket"
            ], 
            "Resource":[
              "arn:aws:s3:::${ModelBucketName}*",
              "arn:aws:s3:::${DataBucketName}*",
              "arn:aws:s3:::${ModelBucketName}/*",
              "arn:aws:s3:::${DataBucketName}/*"
              ]
          },
          {
              "Effect": "Allow",
              "Principal": "*",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "*",
              "Condition": {
                "StringEqualsIgnoreCase": {
                  "s3:ExistingObjectTag/SageMaker": "true"
                }
              }
            }
          ]
        }
      RouteTableIds: !Ref PrivateRouteTableIds

  #Â SSM parameter
  VPCEndpointS3IdSSM:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub "${EnvName}-${EnvType}-s3-vpce-id"
      Type: String
      Value: !Ref VPCEndpointS3
      Description: S3 VPC Endpoint ID



