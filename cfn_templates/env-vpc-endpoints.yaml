# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Create the all VPC endpoints for the Data Science environment VPC

Outputs:
  VPCEndpointS3Id:
    Description: Id of the S3 VPC endpoint
    Value: !If
    - S3VPCEndpointCondition
    - !Ref VPCEndpointS3
    - !Ref ExistingS3VPCEndpointId
  
  VPCEndpointKMSId:
    Description: Id of the S3 VPC endpoint
    Value: !If
    - KMSVPCEndpointCondition
    - !Ref VPCEndpointKMS
    - ''

  PyPIMirrorEndpointDNS:
    Description: DNS entries for the PyPI mirror VPC endpoint 
    Value: !If 
      - PyPIMirrorEndpointCondition
      - !Select [ 0, !GetAtt VPCEndpointSharedServicesPyPIMirror.DnsEntries ]
      - ''

  DataBucketName:
    Description: Name of the Amazon S3 bucket for data
    Value: !Ref DataBucketName

  ModelBucketName:
    Description: Name of the Amazon S3 bucket for models
    Value: !Ref ModelBucketName
  
Parameters:
  VPCId:
    Description: Id of the Data Science VPC
    Type: 'AWS::EC2::VPC::Id'

  CreateS3VPCEndpoint:
    Description: Set to NO to disable creation of an S3 VPC endpoint (and use an existing one)
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  ExistingS3VPCEndpointId:
    Description: Id of the existing S3 VPC endpoint (must be provided if CreateS3VPCEndpoint = NO)
    Type: String
    Default: ''

  CreateSSMVPCEndpoint:
    Description: Set to NO to disable creation of an SSM VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCWVPCEndpoint:
    Description: Set to NO to disable creation of a CloudWatch VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCWLVPCEndpoint:
    Description: Set to NO to disable creation of a CloudWatch logs VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateSageMakerAPIVPCEndpoint:
    Description: Set to NO to disable creation of a SageMaker API VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateSageMakerRuntimeVPCEndpoint:
    Description: Set to NO to disable creation of a SageMaker Runtime VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateSageMakerNotebookVPCEndpoint:
    Description: Set to NO to disable creation of a SageMaker Notebook VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateSTSVPCEndpoint:
    Description: Set to NO to disable creation of an STS VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCodeCommitVPCEndpoint:
    Description: Set to NO to disable creation of a CodeCommit VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCodeCommitAPIVPCEndpoint:
    Description: Set to NO to disable creation of a CodeCommit API VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCodePipelineVPCEndpoint:
    Description: Set to NO to disable creation of a CodePipeline VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateCodeBuildVPCEndpoint:
    Description: Set to NO to disable creation of a CodeBuild VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateECRAPIVPCEndpoint:
    Description: Set to NO to disable creation of an ECR API VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateECRVPCEndpoint:
    Description: Set to NO to disable creation of a ECR VPC endpoint
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  CreateServiceCatalogVPCEndpoint:
    Description: Set to NO to disable creation of a Service Catalog VPC endpoint. This VPC endpoint is needed to access Studio Projects functionality
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'
  
  CreateKMSVPCEndpoint:
    Description: Set to NO to disable creation of a KMS VPC endpoint. This VPC endpoint is needed for all KMS API calls
    Type: String
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'YES'

  PrivateSubnetIds:
    Description: List of the subnet ids where Data Science environment deployed to
    Type: List<AWS::EC2::Subnet::Id>

  PrivateRouteTableIds:
    Description: Comma-delimited list of private route tables ids
    Type: CommaDelimitedList

  VPCEndpointsSecurityGroupId:
    Description: Id of the security group with all VPC endpoints to access AWS public services
    Type: 'AWS::EC2::SecurityGroup::Id'

  SharedServicesVPCEndpointSecurityGroupId:
    Description: ID of the security group with the VPC endpoint to access the shared services VPC
    Type: 'AWS::EC2::SecurityGroup::Id'

  PyPIMirrorEndpointServiceName:
    Description: PyPI mirror service name for VPC endpoint
    Type: String
    Default: ''

  DataBucketName:
    Description: S3 bucket name to store data
    Type: String

  ModelBucketName:
    Description: S3 bucket name to store models
    Type: String

  EnvName:
    Type: String
    AllowedPattern: '[a-z0-9\-]*'
    Description: Please specify your data science environment/team name.  Used as a suffix for environment resource names.

  EnvType:
    Description: System Environment (e.g. dev, test, prod). Used as a suffix for environment resource names.
    Type: String
    Default: dev

Conditions:
  PyPIMirrorEndpointCondition: !Not [ !Equals [!Ref 'PyPIMirrorEndpointServiceName', ''] ]
  S3VPCEndpointCondition: !Equals [!Ref 'CreateS3VPCEndpoint', 'YES']

  SSMVPCEndpointCondition: !Equals [!Ref 'CreateSSMVPCEndpoint', 'YES']
  CWVPCEndpointCondition: !Equals [!Ref 'CreateCWVPCEndpoint', 'YES']
  CWLVPCEndpointCondition: !Equals [!Ref 'CreateCWLVPCEndpoint', 'YES']
  SageMakerAPIVPCEndpointCondition: !Equals [!Ref 'CreateSageMakerAPIVPCEndpoint', 'YES']
  SageMakerRuntimeVPCEndpointCondition: !Equals [!Ref 'CreateSageMakerRuntimeVPCEndpoint', 'YES']
  SageMakerNotebookVPCEndpointCondition: !Equals [!Ref 'CreateSageMakerNotebookVPCEndpoint', 'YES']
  STSVPCEndpointCondition: !Equals [!Ref 'CreateSTSVPCEndpoint', 'YES']
  CodeCommitVPCEndpointCondition: !Equals [!Ref 'CreateCodeCommitVPCEndpoint', 'YES']
  CodeCommitAPIVPCEndpointCondition: !Equals [!Ref 'CreateCodeCommitAPIVPCEndpoint', 'YES']
  CodePipelineVPCEndpointCondition: !Equals [!Ref 'CreateCodePipelineVPCEndpoint', 'YES']
  CodeBuildVPCEndpointCondition: !Equals [!Ref 'CreateCodeBuildVPCEndpoint', 'YES']
  ECRAPIVPCEndpointCondition: !Equals [!Ref 'CreateECRAPIVPCEndpoint', 'YES']
  ECRVPCEndpointCondition: !Equals [!Ref 'CreateECRVPCEndpoint', 'YES']
  ServiceCatalogVPCEndpointCondition: !Equals [!Ref 'CreateServiceCatalogVPCEndpoint', 'YES']
  KMSVPCEndpointCondition: !Equals [!Ref 'CreateKMSVPCEndpoint', 'YES']

Rules:
  S3VPCEndpoint:
    RuleCondition: !Equals [!Ref 'CreateS3VPCEndpoint', 'NO']
    Assertions:
      - Assert: !Not [ !Equals [ !Ref ExistingS3VPCEndpointId, '' ] ]
        AssertDescription: ExistingS3VPCEndpointId must be provided if CreateS3VPCEndpoint=NO

Resources:

  # Create the VPC endpoints (interface type) for AWS public service access:
  # SSM, CloudWatch, CloudWatch Logs, SageMaker Runtime, SageMaker API, SageMaker Notebook
  # STS, CodeCommit, CodeCommit API, ECR API, ECR
  # Shared Services PyPi mirror VPC endpoint
  VPCEndpointSSM:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: SSMVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcId: !Ref VPCId

  VPCEndpointCW:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CWVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.monitoring'
      VpcId: !Ref VPCId

  VPCEndpointCWL:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CWLVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      VpcId: !Ref VPCId

  VPCEndpointSagemakerAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: SageMakerAPIVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sagemaker.api'
      VpcId: !Ref VPCId

  VPCEndpointSageMakerRuntime:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: SageMakerRuntimeVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sagemaker.runtime'
      VpcId: !Ref VPCId

  VPCEndpointSageMakerNotebook:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: SageMakerNotebookVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'aws.sagemaker.${AWS::Region}.notebook'
      VpcId: !Ref VPCId
      
  VPCEndpointSTS:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: STSVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sts'
      VpcId: !Ref VPCId

  VPCEndpointCodeCommit:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CodeCommitVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.git-codecommit'
      VpcId: !Ref VPCId

  VPCEndpointCodeCommitAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CodeCommitAPIVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.codecommit'
      VpcId: !Ref VPCId

  VPCEndpointCodePipeline:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CodePipelineVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.codepipeline'
      VpcId: !Ref VPCId

  VPCEndpointCodeBuild:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: CodeBuildVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.codebuild'
      VpcId: !Ref VPCId

  VPCEndpointECRAPI:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: ECRAPIVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      VpcId: !Ref VPCId

  VPCEndpointECR:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: ECRVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcId: !Ref VPCId

  VPCEndpointServiceCatalog:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: ServiceCatalogVPCEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.servicecatalog'
      VpcId: !Ref VPCId

  VPCEndpointSharedServicesPyPIMirror:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: PyPIMirrorEndpointCondition
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: false
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref SharedServicesVPCEndpointSecurityGroupId
      ServiceName: !Ref PyPIMirrorEndpointServiceName
      VpcId: !Ref VPCId

  # Create S3 endpoint (gateway type) for S3 access
  VPCEndpointS3:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: S3VPCEndpointCondition
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      VpcId: !Ref VPCId
      PolicyDocument: 
        !Sub |
        { 
          "Version":"2012-10-17", 
          "Statement":[
          { 
            "Effect":"Allow", 
            "Principal": "*", 
            "Action":[
              "s3:GetObject",
              "s3:PutObject",
              "s3:DeleteObject",
              "s3:ListBucket",
              "s3:CreateBucket",
              "s3:GetBucketAcl",
              "s3:GetBucketCors",
              "s3:ListBucketMultipartUploads",
              "s3:PutBucketCors",
              "s3:GetObjectVersion",
              "s3:AbortMultipartUpload",
              "s3:GetBucketLocation",
              "s3:GetBucketTagging"
            ], 
            "Resource":[
              "arn:aws:s3:::*${ModelBucketName}*",
              "arn:aws:s3:::*${DataBucketName}*",
              "arn:aws:s3:::*sagemaker*",
              "arn:aws:s3:::*SageMaker*",
              "arn:aws:s3:::*Sagemaker*",
              "arn:aws:s3:::*aws-glue*",
              "arn:aws:s3:::sm-mlops-cp-*"
              ]
          },
          {
              "Effect": "Allow",
              "Principal": "*",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "*",
              "Condition": {
                "StringEqualsIgnoreCase": {
                  "s3:ExistingObjectTag/SageMaker": "true"
                }
              }
            },
            {
                "Effect": "Allow",
                "Principal": "*",
                "Action": [
                    "s3:GetObject"
                ],
                "Resource": "*",
                "Condition": {
                    "StringEquals": {
                        "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
                    }
                }
            }
          ]
        }
      RouteTableIds: !Ref PrivateRouteTableIds

  VPCEndpointKMS:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: KMSVPCEndpointCondition
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: '*'
            Resource: '*'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroupId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.kms'
      VpcId: !Ref VPCId

  # SSM parameter
  VPCEndpointS3IdSSM:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub "${EnvName}-${EnvType}-s3-vpce-id"
      Type: String
      Value: !If
        - S3VPCEndpointCondition
        - !Ref VPCEndpointS3
        - !Ref ExistingS3VPCEndpointId
      Description: S3 VPC Endpoint ID



